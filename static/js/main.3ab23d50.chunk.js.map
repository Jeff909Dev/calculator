{"version":3,"sources":["Calculator.js","App.js","serviceWorker.js","index.js"],"names":["mainStyle","maxWidth","marginTop","borderRadius","cScreen","padding","wordBreak","overflowWrap","cButtonStyle","width","height","background","border","endsOp","formula","length","isOperator","endsWithOperator","endsWithNegativeSign","clearStyle","operatorStyle","equalsStyle","position","bottom","Calculator","props","state","currentVal","prevVal","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","innerText","console","log","match","style","className","sm","Formula","Output","currentValue","id","onClick","fullWidth","React","Component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ggDAIMA,UAAY,CACdC,SAAU,IACVC,UAAW,GACXC,aAAc,GAGZC,QAAU,CACZC,QAAS,EACTC,UAAW,aACXC,aAAc,cAGZC,aAAe,CACjBC,MAAO,GACPC,OAAQ,GACRC,WAAY,UACZC,OAAQ,qBAINC,OAAS,SAAAC,GAEX,OADWA,EAAQA,EAAQC,OAAS,IAEhC,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IACD,OAAO,EACX,QACI,OAAO,IAIbC,WAAa,eACfC,iBAAmB,gBACnBC,qBAAuB,QACvBC,WAAa,CAAER,WAAY,WAC3BS,cAAgB,CAAET,WAAY,WAC9BU,YAAc,CACVV,WAAY,UACZW,SAAU,WACVZ,OAAQ,IACRa,OAAQ,GAIVC,W,2BACF,oBAAYC,GAAQ,IAAD,4KACf,0UAAMA,KACDC,MAAQ,CACTC,WAAY,IACZC,QAAS,IACTd,QAAS,GACTe,YAAa,MACbC,YAAa,IAEjB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,4JACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,4JACvB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,4JACtB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,4JAClB,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,4JACrB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,4JAdN,E,iXAiBA,IAAD,OACdM,KAAKC,SAAS,CACVZ,WAAY,kBACZC,QAASU,KAAKZ,MAAMC,aAExBa,YAAW,kBAAM,EAAKD,SAAS,CAAEZ,WAAY,EAAKD,MAAME,YAAY,O,sDAIpE,IAAKU,KAAKZ,MAAMC,WAAWc,SAAS,SAAU,CAE1C,IADA,IAAIC,WAAaJ,KAAKZ,MAAMZ,QACrBG,iBAAiB0B,KAAKD,aACzBA,WAAaA,WAAWE,MAAM,GAAI,GAEtCF,WAAaA,WAAWG,QAAQ,KAAM,KAAKA,QAAQ,UAAM,KACzD,IAAIC,OAASC,KAAKC,MAAM,KAAgBC,KAAKP,aAAe,KAC5DJ,KAAKC,SAAS,CACVZ,WAAYmB,OAAOI,WACnBpC,QACI4B,WAAWG,QAAQ,MAAO,UAAKA,QAAQ,KAAM,UAAO,IAAMC,OAC9DlB,QAASkB,OACTK,WAAW,O,sCAKPC,GACZ,IAAKd,KAAKZ,MAAMC,WAAWc,SAAS,SAAU,CAC1C,IAAMY,EAAQD,EAAEE,OAAOC,UADmB,EAEFjB,KAAKZ,MAArCZ,EAFkC,EAElCA,QAASc,EAFyB,EAEzBA,QAASuB,EAFgB,EAEhBA,UAC1BK,QAAQC,IAAI,YAAc5C,OAAOC,IACjC0C,QAAQC,IAAI,YAAcvC,qBAAqByB,KAAK7B,IACpDwB,KAAKC,SAAS,CAAEZ,WAAY0B,EAAOF,WAAW,IAC1CA,EACAb,KAAKC,SAAS,CAAEzB,QAASc,EAAUyB,IAE3BxC,OAAOC,GAQPI,qBAAqByB,KAAK7B,GASjB,MAAVuC,IACPG,QAAQC,IAAI,KACZnB,KAAKC,SAAS,CACVzB,QAASc,EAAUyB,MAXvBG,QAAQC,IAAI,gDAAiD7B,GAC7D4B,QAAQC,IAAI,gDAAiD3C,GAC7D0C,QAAQC,IAAI,KACZnB,KAAKC,SAAS,CACVzB,SACKI,qBAAqByB,KAAK7B,EAAUuC,GAASvC,EAAUc,GACxDyB,MAdRG,QAAQC,IAAI,gDAAiD7B,GAC7D4B,QAAQC,IAAI,gDAAiD3C,GAC7D0C,QAAQC,IAAI,KACZnB,KAAKC,SAAS,CACVX,QAASd,EACTA,QAASA,EAAUuC,Q,oCAoBrBD,GACV,IAAKd,KAAKZ,MAAMC,WAAWc,SAAS,SAAU,CAAC,IAAD,EACCH,KAAKZ,MAAxCC,EADkC,EAClCA,WAAYb,EADsB,EACtBA,QAASqC,EADa,EACbA,UACvBE,EAAQD,EAAEE,OAAOC,UACvBjB,KAAKC,SAAS,CAAEY,WAAW,IACvBxB,EAAWZ,OAAS,GACpBuB,KAAKP,kBACEoB,EACPb,KAAKC,SAAS,CACVZ,WAAY0B,EACZvC,QAAmB,MAAVuC,EAAgBA,EAAQ,KAGrCf,KAAKC,SAAS,CACVZ,WACmB,MAAfA,GAAsBX,WAAW2B,KAAKhB,GAChC0B,EACA1B,EAAa0B,EACvBvC,QACmB,MAAfa,GAAgC,MAAV0B,EACJ,KAAZvC,EAAiBuC,EAAQvC,EACzB,iBAAiB6B,KAAK7B,GAClBA,EAAQ8B,MAAM,GAAI,GAAKS,EACvBvC,EAAUuC,O,uCAOP,IAAzBf,KAAKZ,MAAMyB,UACXb,KAAKC,SAAS,CACVZ,WAAY,KACZb,QAAS,KACTqC,WAAW,IAGdb,KAAKZ,MAAMC,WAAWc,SAAS,MAC/BH,KAAKZ,MAAMC,WAAWc,SAAS,WAEhCH,KAAKC,SAAS,CAAEY,WAAW,IACvBb,KAAKZ,MAAMC,WAAWZ,OAAS,GAC/BuB,KAAKP,kBAELd,iBAAiB0B,KAAKL,KAAKZ,MAAMZ,UACN,MAA1BwB,KAAKZ,MAAMC,YAA6C,KAAvBW,KAAKZ,MAAMZ,QAE7CwB,KAAKC,SAAS,CACVZ,WAAY,KACZb,QAASwB,KAAKZ,MAAMZ,QAAU,OAGlCwB,KAAKC,SAAS,CACVZ,WAAYW,KAAKZ,MAAMZ,QAAQ4C,MAAM,kBAAkB,GAAK,IAC5D5C,QAASwB,KAAKZ,MAAMZ,QAAU,S,mCAO1CwB,KAAKC,SAAS,CACVZ,WAAY,IACZC,QAAS,IACTd,QAAS,GACTe,YAAa,MACbC,YAAa,GACbqB,WAAW,M,+BAKf,OACI,2DAAC,4CAAD,KACI,2DAAC,qDAAD,CAAMQ,MAAO3D,WACT,2DAAC,oDAAD,CAAK4D,UAAU,gBACX,2DAAC,oDAAD,CAAKC,GAAI,GAAID,UAAU,QACnB,2DAAC,iDAAD,CAAOD,MAAOvD,SACV,kEAAKwD,UAAU,SAAQ,2DAACE,QAAD,CAAShD,QAASwB,KAAKZ,MAAMZ,QAAQ+B,QAAQ,KAAM,aAC1E,2DAACkB,OAAD,CAAQC,aAAc1B,KAAKZ,MAAMC,gBAK7C,kEAAKiC,UAAU,QACX,2DAAC,oDAAD,CAAKA,UAAU,mBACX,2DAAC,oDAAD,CAAKA,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,WAAWC,QAAS5B,KAAKL,gBAAiBoB,MAAM,KAA3E,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,SAASC,QAAS5B,KAAKL,gBAAiBoB,MAAM,KAAzE,OAGR,2DAAC,oDAAD,CAAKO,UAAU,mBACX,2DAAC,oDAAD,CAAKA,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,QAAQC,QAAS5B,KAAKD,cAAegB,MAAM,KAAtE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,QAAQC,QAAS5B,KAAKD,cAAegB,MAAM,KAAtE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,OAAOC,QAAS5B,KAAKD,cAAegB,MAAM,KAArE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,WAAWC,QAAS5B,KAAKL,gBAAiBoB,MAAM,KAA3E,OAGR,2DAAC,oDAAD,CAAKO,UAAU,mBACX,2DAAC,oDAAD,CAAKA,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,OAAOC,QAAS5B,KAAKD,cAAegB,MAAM,KAArE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,OAAOC,QAAS5B,KAAKD,cAAegB,MAAM,KAArE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,MAAMC,QAAS5B,KAAKD,cAAegB,MAAM,KAApE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,MAAMC,QAAS5B,KAAKL,gBAAiBoB,MAAM,KAAtE,OAGR,2DAAC,oDAAD,CAAKO,UAAU,mBACX,2DAAC,oDAAD,CAAKA,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,OAAOC,QAAS5B,KAAKD,cAAegB,MAAM,KAArE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,MAAMC,QAAS5B,KAAKD,cAAegB,MAAM,KAApE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,MAAMC,QAAS5B,KAAKD,cAAegB,MAAM,KAApE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,QAAQC,QAAS5B,KAAKD,cAAegB,MAAM,KAAtE,OAGR,2DAAC,oDAAD,CAAKO,UAAU,mBACX,2DAAC,oDAAD,CAAKA,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,SAASC,QAAS5B,KAAKJ,eAAgBmB,MAAM,KAAxE,MAEJ,2DAAC,oDAAD,CAAKO,UAAU,cAAcD,MAAOnD,aAAcqD,GAAI,GAClD,qEAAQD,UAAU,MAAMK,GAAG,UAAUC,QAAS5B,KAAKF,cAAeiB,MAAM,KAAxE,QAIZ,2DAAC,oDAAD,CAAKO,UAAU,QACX,2DAAC,oDAAD,CAAKC,GAAI,IACL,qEAAQD,UAAU,MAAMK,GAAG,QAAQC,QAAS5B,KAAKH,WAAYgC,WAAS,GAAtE,qB,YAlOHC,6CAAMC,WA2OzBN,O,40BAEE,OACI,kEAAKH,UAAU,eAAeK,GAAG,WAC5B3B,KAAKb,MAAMuC,kB,GAJPI,6CAAMC,WAUrBP,Q,40BAEE,OAAO,kEAAKF,UAAU,iBAAiBtB,KAAKb,MAAMX,a,GAFpCsD,6CAAMC,WAMb7C,kC,gLCpSA8C,MARf,WACE,OACE,yBAAKV,UAAU,OACb,kBAACpC,EAAA,EAAD,QCKc+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCZNiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3ab23d50.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Paper, button } from '@material-ui/core';\r\nimport { Grid, Col, Row } from 'react-flexbox-grid';\r\n\r\nconst mainStyle = {\r\n    maxWidth: 340,\r\n    marginTop: 50,\r\n    borderRadius: 5\r\n}\r\n\r\nconst cScreen = {\r\n    padding: 3,\r\n    wordBreak: 'break-word',\r\n    overflowWrap: 'break-word',\r\n}\r\n\r\nconst cButtonStyle = {\r\n    width: 70,\r\n    height: 40,\r\n    background: '#cecece',\r\n    border: '1px solid #dee2e6',\r\n\r\n}\r\n\r\nconst endsOp = formula => {\r\n    var char = formula[formula.length - 1]\r\n    switch (char) {\r\n        case '+':\r\n            return true;\r\n        case '-':\r\n            return true;\r\n        case '/':\r\n            return true;\r\n        case 'x':\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nconst isOperator = /[x/+\\‑]/,\r\n    endsWithOperator = /[x+/\\‑]$/,\r\n    endsWithNegativeSign = /[\\-]$/,\r\n    clearStyle = { background: \"#ac3939\" },\r\n    operatorStyle = { background: \"#666666\" },\r\n    equalsStyle = {\r\n        background: \"#004466\",\r\n        position: \"absolute\",\r\n        height: 130,\r\n        bottom: 5\r\n    };\r\n\r\n// COMPONENTS:\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentVal: \"0\",\r\n            prevVal: \"0\",\r\n            formula: \"\",\r\n            currentSign: \"pos\",\r\n            lastClicked: \"\"\r\n        };\r\n        this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n        this.handleOperators = this.handleOperators.bind(this);\r\n        this.handleEvaluate = this.handleEvaluate.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n        this.handleDecimal = this.handleDecimal.bind(this);\r\n        this.handleNumbers = this.handleNumbers.bind(this);\r\n    }\r\n\r\n    maxDigitWarning() {\r\n        this.setState({\r\n            currentVal: \"Digit Limit Met\",\r\n            prevVal: this.state.currentVal\r\n        });\r\n        setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\r\n    }\r\n\r\n    handleEvaluate() {\r\n        if (!this.state.currentVal.includes(\"Limit\")) {\r\n            let expression = this.state.formula;\r\n            while (endsWithOperator.test(expression)) {\r\n                expression = expression.slice(0, -1);\r\n            }\r\n            expression = expression.replace(/x/g, \"*\").replace(/‑/g, \"-\");\r\n            let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n            this.setState({\r\n                currentVal: answer.toString(),\r\n                formula:\r\n                    expression.replace(/\\*/g, \"⋅\").replace(/-/g, \"‑\") + \"=\" + answer,\r\n                prevVal: answer,\r\n                evaluated: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOperators(e) {\r\n        if (!this.state.currentVal.includes(\"Limit\")) {\r\n            const value = e.target.innerText;\r\n            const { formula, prevVal, evaluated } = this.state;\r\n            console.log('Operator ' + endsOp(formula))\r\n            console.log('Negative ' + endsWithNegativeSign.test(formula))\r\n            this.setState({ currentVal: value, evaluated: false });\r\n            if (evaluated) {\r\n                this.setState({ formula: prevVal + value });\r\n                // } else if (!endsWithOperator.test(formula)) {\r\n            } else if (!endsOp(formula)) {\r\n                console.log(\"TCL: Calculator -> handleOperators -> prevVal\", prevVal)\r\n                console.log(\"TCL: Calculator -> handleOperators -> formula\", formula)\r\n                console.log('1')\r\n                this.setState({\r\n                    prevVal: formula,\r\n                    formula: formula + value\r\n                });\r\n            } else if (!endsWithNegativeSign.test(formula)) {\r\n                console.log(\"TCL: Calculator -> handleOperators -> prevVal\", prevVal)\r\n                console.log(\"TCL: Calculator -> handleOperators -> formula\", formula)\r\n                console.log('2')\r\n                this.setState({\r\n                    formula:\r\n                        (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n                        value\r\n                });\r\n            } else if (value !== '-') {\r\n                console.log('3')\r\n                this.setState({\r\n                    formula: prevVal + value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleNumbers(e) {\r\n        if (!this.state.currentVal.includes(\"Limit\")) {\r\n            const { currentVal, formula, evaluated } = this.state;\r\n            const value = e.target.innerText;\r\n            this.setState({ evaluated: false });\r\n            if (currentVal.length > 21) {\r\n                this.maxDigitWarning();\r\n            } else if (evaluated) {\r\n                this.setState({\r\n                    currentVal: value,\r\n                    formula: value !== \"0\" ? value : \"\"\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    currentVal:\r\n                        currentVal === \"0\" || isOperator.test(currentVal)\r\n                            ? value\r\n                            : currentVal + value,\r\n                    formula:\r\n                        currentVal === \"0\" && value === \"0\"\r\n                            ? formula === \"\" ? value : formula\r\n                            : /([^.0-9]0|^0)$/.test(formula)\r\n                                ? formula.slice(0, -1) + value\r\n                                : formula + value\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDecimal() {\r\n        if (this.state.evaluated === true) {\r\n            this.setState({\r\n                currentVal: \"0.\",\r\n                formula: \"0.\",\r\n                evaluated: false\r\n            });\r\n        } else if (\r\n            !this.state.currentVal.includes(\".\") &&\r\n            !this.state.currentVal.includes(\"Limit\")\r\n        ) {\r\n            this.setState({ evaluated: false });\r\n            if (this.state.currentVal.length > 21) {\r\n                this.maxDigitWarning();\r\n            } else if (\r\n                endsWithOperator.test(this.state.formula) ||\r\n                (this.state.currentVal === \"0\" && this.state.formula === \"\")\r\n            ) {\r\n                this.setState({\r\n                    currentVal: \"0.\",\r\n                    formula: this.state.formula + \"0.\"\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n                    formula: this.state.formula + \".\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.setState({\r\n            currentVal: \"0\",\r\n            prevVal: \"0\",\r\n            formula: \"\",\r\n            currentSign: \"pos\",\r\n            lastClicked: \"\",\r\n            evaluated: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Grid style={mainStyle}>\r\n                    <Row className=\"upper-screen\">\r\n                        <Col sm={12} className=\"mb-2\">\r\n                            <Paper style={cScreen}>\r\n                                <div className=\"d-non\"><Formula formula={this.state.formula.replace(/x/g, \"⋅\")} /></div>\r\n                                <Output currentValue={this.state.currentVal} />\r\n                            </Paper>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"keys\">\r\n                        <Row className=\"button-calc-row\">\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={6}>\r\n                                <button className=\"btn\" id=\"multiply\" onClick={this.handleOperators} value=\"x\">x</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={6}>\r\n                                <button className=\"btn\" id=\"divide\" onClick={this.handleOperators} value=\"/\">/</button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"button-calc-row\">\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"seven\" onClick={this.handleNumbers} value=\"7\">7</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"eight\" onClick={this.handleNumbers} value=\"8\">8</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"nine\" onClick={this.handleNumbers} value=\"9\">9</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"subtract\" onClick={this.handleOperators} value=\"-\">-</button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"button-calc-row\">\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"four\" onClick={this.handleNumbers} value=\"4\">4</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"five\" onClick={this.handleNumbers} value=\"5\">5</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"six\" onClick={this.handleNumbers} value=\"6\">6</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"add\" onClick={this.handleOperators} value=\"+\">+</button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"button-calc-row\">\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"zero\" onClick={this.handleNumbers} value=\"0\">0</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"one\" onClick={this.handleNumbers} value=\"1\">1</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"two\" onClick={this.handleNumbers} value=\"2\">2</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"three\" onClick={this.handleNumbers} value=\"3\">3</button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"button-calc-row\">\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={9}>\r\n                                <button className=\"btn\" id=\"equals\" onClick={this.handleEvaluate} value=\"=\">=</button>\r\n                            </Col>\r\n                            <Col className=\"button-calc\" style={cButtonStyle} sm={3}>\r\n                                <button className=\"btn\" id=\"decimal\" onClick={this.handleDecimal} value=\".\">.</button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <Row className=\"mt-3\">\r\n                        <Col sm={12}>\r\n                            <button className=\"btn\" id=\"clear\" onClick={this.initialize} fullWidth >C L E A R</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass Output extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"outputScreen\" id=\"display\">\r\n                {this.props.currentValue}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Formula extends React.Component {\r\n    render() {\r\n        return <div className=\"formulaScreen\">{this.props.formula}</div>;\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport './App.css';\nimport Calculator from './Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}